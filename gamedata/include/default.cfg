settings:
{
	"core_script": "lgsm.py" # Name of the core script file
	"scriptpath": "/home/jballou/dev/lgsm-python/insserver" # Full path to the real script file, should match up with the gamedata name
	"selfname": "insserver" # Name of the actual script file, should match up with the gamedata name
	"servicename": "ins-coop" # Symlink name for this server instance
	"rootdir": "/home/jballou/dev/lgsm-python" # Root directory where script is stored
	"githubuser": "jaredballou" # GitHub user
	"githubrepo": "linuxgsm" # GitHub repo
	"githubbranch": "master" # GitHub branch
	"git_update": 0 # Update files from GitHub
	"lgsmdir": $rootdir + "/lgsm" # Path to LGSM config directory
	"gamedatadir": $lgsmdir + "/gamedata" # Path to gamedata files
	"lgsmserverdir": $lgsmdir + "/servers/" + $selfname # Path to this game's files
	"logdir": $lgsmserverdir + "/log" # Path to this game's logs
	"settingsdir": $lgsmserverdir + "/tmp" # Path to this game's temp files
	"scriptcfgdir": $lgsmserverdir + "/cfg" # Path to this game's configs
	"cachedir": $lgsmdir + "/tmp" # Path to global cache
	"debugflag": $lgsmdir + "/.dev-debug" # File that enables debug mode
	"debuglog": $lgsmdir + "/dev-debug.log" # Log file created by debugging
	"lastcommit_file": $cachedir + "/lastcommit" # File that records the last Git commit for version checking


	"backupdir": $lgsmdir + "/backups" # Backup Directory"
	"map": "--EMPTY--" # Default map to load"
	"game_mod": "--EMPTY--" # Mod to load from gamedata/mods"
	"email": "email@example.com" # Email address for notification"
	"emailnotification": "off" # Email notification (on|off)"
	"engine": "--EMPTY--" # Game Engine"
	"filesdir": $rootdir + "/serverfiles" # Server Files Directory"
	"game": "--EMPTY--" # Name of game"
	"gamename": "--EMPTY--" # Name for subdirectory in GitHub repo"
	"ip": "0.0.0.0" # IP Address to bind for server"
	"lockselfname": "." + $servicename + ".lock" # LGSM Lock File"
	"logdays": "7" # Number of days to retain logs"
	"maxplayers": "--EMPTY--" # Maximum player count"
	"port": "--EMPTY--" # Port to bind for server"
	"consolelogdir": $logdir + "/console" # Console Log Dir"
	"consolelog": $consolelogdir + "/" + $servicename + "-console.log" # Console Log"
	"consolelogdate": $consolelogdir + "/" + $servicename + "-console-date.log" # Console Log Rotation Filename"
	"scriptlogdir": $logdir + "/script" # Script Log Dir"
	"scriptlog": $scriptlogdir + "/" + $servicename + "-script.log" # Script Log"
	"scriptlogdate": $scriptlogdir + "/" + $servicename + "-script-date.log" # Script Log Rotation Filename"
	"emaillog": $scriptlogdir + "/" + $servicename + "-email.log" # Email Log"
	"servercfg_suffix": ".cfg" # Suffix to put on the end of the server config. For file extensions, use \".ext\", setting to empty will use the bare server config name."
	"systemdir": $filesdir + "/" + $game # System Directory (root of game installation)"
	"gamelogdir": $systemdir + "/logs" # Game log directory"
	"executabledir": $filesdir # Executable directory"
	"executable": "--EMPTY--" # Executable to invoke to start game server"
	"servercfgdir": $systemdir + "/cfg" # Server config directory"
	"servercfg": $servicename + $servercfg_suffix # Server config file for this instance"
	"servercfgdefault": "lgsm-default" + $servercfg_suffix # Default server configuration file"
	"servercfgfullpath": $servercfgdir + "/" + $servercfg # Full path to server config"
	"dependency_path": $filesdir
	"server_parms": "--EMPTY--" # Additional Server command-line arguments. Put the parameters that start with \"-\" first, then \"+\" parameters after"
}

scriptactions:
{
	"st": "start|command_start.sh|Start the server."
	"sp": "stop|command_stop.sh|Stop the server."
	"r": "restart|fn_restart|Restart the server."
	"dd": "depsdetect|command_dev_detect_deps.sh|Detect Dependencies"
	"gd": "game-dependencies|fn_fix_game_dependencies|Make sure that the correct libraries for this game are installed"
	"u": "update|update_check.sh|Checks and applies updates from SteamCMD."
	"uf": "update-functions|update_functions.sh|Removes all functions so latest can be downloaded."
	"m": "monitor|command_monitor.sh|Checks that the server is running."
	"et": "email-test|command_email_test.sh|Sends test monitor email."
	"d": "details|command_details.sh|Displays useful infomation about the server."
	"debug": "|command_debug.sh|See the output of the server directly to your terminal."
	"dev": "dev-debug|command_dev_debug.sh|Toggle Developer Debug mode"
	"i": "install|command_install.sh|Install the server."
	"ai": "auto-install|fn_autoinstall|Install the server, without prompts."
	"b": "backup|command_backup.sh|Create archive of the server."
	"im": "install-mod|install_mod.sh|Install mods"
}
